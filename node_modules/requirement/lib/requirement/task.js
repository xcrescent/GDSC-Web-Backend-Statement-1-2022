// Generated by CoffeeScript 1.9.3
(function() {
  var Tree, fs, path;

  fs = require("fs");

  path = require("path");

  Tree = require("./tree");

  module.exports = (function() {
    function _Class(arg) {
      var dir, fn, i, len, ref;
      this.paths = arg.paths;
      ref = this.paths;
      fn = (function(_this) {
        return function(dir) {
          return _this.buildIndices(dir);
        };
      })(this);
      for (i = 0, len = ref.length; i < len; i++) {
        dir = ref[i];
        fn(dir);
      }
    }

    _Class.prototype.buildIndices = function(dir) {
      dir = path.resolve(dir);
      return new Tree({
        dir: dir,
        onTree: this.onTree.bind(this)
      });
    };

    _Class.prototype.onTree = function(arg) {
      var fpath, name, out, rm, tree;
      name = arg.name, tree = arg.tree, fpath = arg.fpath;
      rm = new RegExp(fpath, "g");
      out = this.writeKeyValue(tree[name]);
      out = out.replace(rm, ".");
      out = "# Generated by `gulp index`.\n#\nmodule.exports =\n" + out;
      return fs.writeFileSync(fpath + "/index.coffee", out);
    };

    _Class.prototype.writeKeyValue = function(tree, indent) {
      var name, out, rpath;
      if (indent == null) {
        indent = 4;
      }
      out = "";
      for (name in tree) {
        rpath = tree[name];
        out += Array(indent - 1).join(" ");
        if (typeof rpath === "object") {
          out += (name + ":\n") + this.writeKeyValue(tree[name], indent + 2);
        } else {
          out += name + ": require \"" + rpath + "\"\n";
        }
      }
      return out;
    };

    return _Class;

  })();

}).call(this);
